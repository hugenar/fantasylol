{"version":3,"mappings":"AAuBE;AAvBF,SAAmB,kBAAkB;AACrC,SAAS,QAAQ,kBAAkC;AACnD,SAAS,wBAAwB;AACjC,SAA8C,cAAc;AAQrD,SAAS,YACf;AAAA,EACC;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,OAAO,WAAW;AAAA,EAClB,GAAG;AACJ,GACA,KACC;AACD,SACC;AAAA,IAAC;AAAA;AAAA,MACA;AAAA,MACC,GAAG;AAAA,MACJ,WAAW,CAAC,WAAW;AACtB,eAAO,OAAO;AAAA,UACb,WAAW,iBAAiB,WAAW,MAAM;AAAA,UAC7C;AAAA,UACA;AAAA,UACA;AAAA,UACA,GAAG;AAAA,QACJ,CAAC;AAAA,MACF;AAAA,MAEC;AAAA;AAAA,EACF;AAEF;AAEO,MAAM,aAAa,WAAW,WAAW;AAChD,WAAW,cAAc","names":[],"ignoreList":[],"sources":["../../../src/components/button-link.tsx"],"sourcesContent":["import { type Ref, forwardRef } from \"react\";\nimport { Link as AriaButton, type LinkProps } from \"react-aria-components\";\nimport { resolveClassName } from \"../utilities/resolve-class-name.js\";\nimport { type ButtonPreset, type ButtonShape, button } from \"./button.js\";\n\ninterface ButtonLinkProps extends LinkProps {\n\tpreset?: ButtonPreset;\n\tthin?: boolean;\n\tshape?: ButtonShape;\n}\n\nexport function _ButtonLink(\n\t{\n\t\tchildren,\n\t\tclassName,\n\t\tpreset = \"secondary\",\n\t\tshape = \"normal\",\n\t\tthin = preset === \"dimmed\",\n\t\t...props\n\t}: ButtonLinkProps,\n\tref: Ref<HTMLAnchorElement>,\n) {\n\treturn (\n\t\t<AriaButton\n\t\t\tref={ref}\n\t\t\t{...props}\n\t\t\tclassName={(values) => {\n\t\t\t\treturn button({\n\t\t\t\t\tclassName: resolveClassName(className, values),\n\t\t\t\t\tpreset,\n\t\t\t\t\tshape,\n\t\t\t\t\tthin,\n\t\t\t\t\t...values,\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AriaButton>\n\t);\n}\n\nexport const ButtonLink = forwardRef(_ButtonLink);\nButtonLink.displayName = \"ButtonLink\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IiIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W119"]}