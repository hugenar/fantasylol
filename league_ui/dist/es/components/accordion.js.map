{"version":3,"mappings":";AAaE,cA2BA,YA3BA;AAXF,SAAS,WAAW;AACpB,SAAS,eAAe,YAAY,gBAAgB;AACpD,OAAO,aAAa;AAKb,SAAS,UAAU,EAAE,SAAS,GAAmB;AACvD,QAAM,CAAC,YAAY,aAAa,IAAI,SAAiB,EAAE;AAEvD,SACC;AAAA,IAAC,iBAAiB;AAAA,IAAjB;AAAA,MACA,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MAEC;AAAA;AAAA,EACF;AAEF;AAEO,MAAM,mBAAmB,IAAI;AAAA,EACnC,MAAM,QAAQ;AACf,CAAC;AAMM,SAAS,iBAAiB;AAAA,EAChC;AAAA,EACA;AACD,GAA0B;AACzB,QAAM,EAAE,cAAc,IAAI,WAAW,gBAAgB;AACrD,QAAM,EAAE,KAAK,IAAI,WAAW,oBAAoB;AAEhD,SACC;AAAA,IAAC;AAAA;AAAA,MACA,MAAK;AAAA,MACL,WAAW,iBAAiB;AAAA,QAC3B;AAAA,MACD,CAAC;AAAA,MACD,SAAS,MAAM;AACd,sBAAc,CAAC,gBAAiB,gBAAgB,OAAO,KAAK,IAAK;AAAA,MAClE;AAAA,MAEA;AAAA,4BAAC,UAAK,WAAW,QAAQ,aAAa,eAAC;AAAA,QACtC;AAAA;AAAA;AAAA,EACF;AAEF;AAMO,SAAS,cAAc,EAAE,UAAU,MAAM,GAAuB;AACtE,SACC;AAAA,IAAC,qBAAqB;AAAA,IAArB;AAAA,MACA,OAAO;AAAA,QACN,MAAM;AAAA,MACP;AAAA,MAEA,8BAAC,SAAI,WAAW,QAAQ,MAAO,UAAS;AAAA;AAAA,EACzC;AAEF;AAKO,SAAS,iBAAiB,EAAE,SAAS,GAA0B;AACrE,QAAM,EAAE,WAAW,IAAI,WAAW,gBAAgB;AAClD,QAAM,EAAE,KAAK,IAAI,WAAW,oBAAoB;AAEhD,MAAI,eAAe,MAAM;AACxB,WAAO;AAAA,EACR;AAEA,SAAO,oBAAC,SAAI,WAAW,QAAQ,SAAU,UAAS;AACnD;AAEA,MAAM,mBAAmB,cAGtB,MAAgB;AAEnB,MAAM,uBAAuB,cAE1B,MAAgB","names":[],"ignoreList":[],"sources":["../../../src/components/accordion.tsx"],"sourcesContent":["\"use client\";\n\nimport { cva } from \"cva\";\nimport { createContext, useContext, useState } from \"react\";\nimport classes from \"./accordion.module\";\n\ninterface AccordionProps {\n\tchildren: React.ReactNode;\n}\nexport function Accordion({ children }: AccordionProps) {\n\tconst [activeItem, setActiveItem] = useState<string>(\"\");\n\n\treturn (\n\t\t<AccordionContext.Provider\n\t\t\tvalue={{\n\t\t\t\tactiveItem,\n\t\t\t\tsetActiveItem,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AccordionContext.Provider>\n\t);\n}\n\nexport const accordionTrigger = cva({\n\tbase: classes.trigger,\n});\n\ninterface AccordionTriggerProps {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n}\nexport function AccordionTrigger({\n\tchildren,\n\tclassName,\n}: AccordionTriggerProps) {\n\tconst { setActiveItem } = useContext(AccordionContext);\n\tconst { item } = useContext(AccordionItemContext);\n\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName={accordionTrigger({\n\t\t\t\tclassName,\n\t\t\t})}\n\t\t\tonClick={() => {\n\t\t\t\tsetActiveItem((currentItem) => (currentItem === item ? \"\" : item));\n\t\t\t}}\n\t\t>\n\t\t\t<span className={classes.triggerIcon}>‚ùØ</span>\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n\ninterface AccordionItemProps {\n\tchildren: React.ReactNode;\n\tvalue: string;\n}\nexport function AccordionItem({ children, value }: AccordionItemProps) {\n\treturn (\n\t\t<AccordionItemContext.Provider\n\t\t\tvalue={{\n\t\t\t\titem: value,\n\t\t\t}}\n\t\t>\n\t\t\t<div className={classes.item}>{children}</div>\n\t\t</AccordionItemContext.Provider>\n\t);\n}\n\ninterface AccordionContentProps {\n\tchildren: React.ReactNode;\n}\nexport function AccordionContent({ children }: AccordionContentProps) {\n\tconst { activeItem } = useContext(AccordionContext);\n\tconst { item } = useContext(AccordionItemContext);\n\n\tif (activeItem !== item) {\n\t\treturn null;\n\t}\n\n\treturn <div className={classes.content}>{children}</div>;\n}\n\nconst AccordionContext = createContext<{\n\tactiveItem: string;\n\tsetActiveItem: React.Dispatch<React.SetStateAction<string>>;\n}>(undefined as any);\n\nconst AccordionItemContext = createContext<{\n\titem: string;\n}>(undefined as any);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IiIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W119"]}